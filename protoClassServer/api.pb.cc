// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace api {
class InitRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InitRequest> {
} _InitRequest_default_instance_;
class FitnessResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FitnessResponse> {
} _FitnessResponse_default_instance_;
class FitnessRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FitnessRequest> {
} _FitnessRequest_default_instance_;
class StopRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StopRequest> {
} _StopRequest_default_instance_;
class StopResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<StopResponse> {
} _StopResponse_default_instance_;

namespace protobuf_api_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitRequest, customer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitRequest, solutionsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitRequest, evalnb_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitRequest, solution_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FitnessResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FitnessResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FitnessResponse, solution_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FitnessRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FitnessRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FitnessRequest, fitness_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopRequest, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopResponse, solution_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StopResponse, fitness_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(InitRequest)},
  { 8, -1, sizeof(FitnessResponse)},
  { 14, -1, sizeof(FitnessRequest)},
  { 20, -1, sizeof(StopRequest)},
  { 26, -1, sizeof(StopResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_InitRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FitnessResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FitnessRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StopRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_StopResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "api.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _InitRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _FitnessResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _FitnessRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _StopRequest_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _StopResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _InitRequest_default_instance_.DefaultConstruct();
  _FitnessResponse_default_instance_.DefaultConstruct();
  _FitnessRequest_default_instance_.DefaultConstruct();
  _StopRequest_default_instance_.DefaultConstruct();
  _StopResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\tapi.proto\022\003api\"W\n\013InitRequest\022\020\n\010custo"
      "mer\030\001 \001(\t\022\024\n\014solutionSize\030\002 \001(\005\022\016\n\006evalN"
      "b\030\003 \001(\005\022\020\n\010solution\030\004 \001(\t\"/\n\017FitnessResp"
      "onse\022\n\n\002id\030\001 \001(\t\022\020\n\010solution\030\002 \001(\t\"-\n\016Fi"
      "tnessRequest\022\n\n\002id\030\001 \001(\t\022\017\n\007fitness\030\002 \001("
      "\001\"*\n\013StopRequest\022\n\n\002id\030\001 \001(\t\022\017\n\007message\030"
      "\002 \001(\t\"=\n\014StopResponse\022\n\n\002id\030\001 \001(\t\022\020\n\010sol"
      "ution\030\002 \001(\t\022\017\n\007fitness\030\003 \001(\0012\312\001\n\023Operati"
      "onalResearch\022<\n\020InitConversation\022\020.api.I"
      "nitRequest\032\024.api.FitnessResponse\"\000\022:\n\013Se"
      "ndFitness\022\023.api.FitnessRequest\032\024.api.Fit"
      "nessResponse\"\000\0229\n\020StopConversation\022\020.api"
      ".StopRequest\032\021.api.StopResponse\"\000b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 521);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_api_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitRequest::kCustomerFieldNumber;
const int InitRequest::kSolutionSizeFieldNumber;
const int InitRequest::kEvalNbFieldNumber;
const int InitRequest::kSolutionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitRequest::InitRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.InitRequest)
}
InitRequest::InitRequest(const InitRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  customer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.customer().size() > 0) {
    customer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_);
  }
  solution_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.solution().size() > 0) {
    solution_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.solution_);
  }
  ::memcpy(&solutionsize_, &from.solutionsize_,
    reinterpret_cast<char*>(&evalnb_) -
    reinterpret_cast<char*>(&solutionsize_) + sizeof(evalnb_));
  // @@protoc_insertion_point(copy_constructor:api.InitRequest)
}

void InitRequest::SharedCtor() {
  customer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solution_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&solutionsize_, 0, reinterpret_cast<char*>(&evalnb_) -
    reinterpret_cast<char*>(&solutionsize_) + sizeof(evalnb_));
  _cached_size_ = 0;
}

InitRequest::~InitRequest() {
  // @@protoc_insertion_point(destructor:api.InitRequest)
  SharedDtor();
}

void InitRequest::SharedDtor() {
  customer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solution_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InitRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[0].descriptor;
}

const InitRequest& InitRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

InitRequest* InitRequest::New(::google::protobuf::Arena* arena) const {
  InitRequest* n = new InitRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InitRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.InitRequest)
  customer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solution_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&solutionsize_, 0, reinterpret_cast<char*>(&evalnb_) -
    reinterpret_cast<char*>(&solutionsize_) + sizeof(evalnb_));
}

bool InitRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.InitRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string customer = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_customer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->customer().data(), this->customer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.InitRequest.customer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 solutionSize = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &solutionsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 evalNb = 3;
      case 3: {
        if (tag == 24u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &evalnb_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string solution = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_solution()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->solution().data(), this->solution().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.InitRequest.solution"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.InitRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.InitRequest)
  return false;
#undef DO_
}

void InitRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.InitRequest)
  // string customer = 1;
  if (this->customer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer().data(), this->customer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.InitRequest.customer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->customer(), output);
  }

  // int32 solutionSize = 2;
  if (this->solutionsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->solutionsize(), output);
  }

  // int32 evalNb = 3;
  if (this->evalnb() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->evalnb(), output);
  }

  // string solution = 4;
  if (this->solution().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->solution().data(), this->solution().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.InitRequest.solution");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->solution(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.InitRequest)
}

::google::protobuf::uint8* InitRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.InitRequest)
  // string customer = 1;
  if (this->customer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->customer().data(), this->customer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.InitRequest.customer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->customer(), target);
  }

  // int32 solutionSize = 2;
  if (this->solutionsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->solutionsize(), target);
  }

  // int32 evalNb = 3;
  if (this->evalnb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->evalnb(), target);
  }

  // string solution = 4;
  if (this->solution().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->solution().data(), this->solution().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.InitRequest.solution");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->solution(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.InitRequest)
  return target;
}

size_t InitRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.InitRequest)
  size_t total_size = 0;

  // string customer = 1;
  if (this->customer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->customer());
  }

  // string solution = 4;
  if (this->solution().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->solution());
  }

  // int32 solutionSize = 2;
  if (this->solutionsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->solutionsize());
  }

  // int32 evalNb = 3;
  if (this->evalnb() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->evalnb());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.InitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InitRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.InitRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.InitRequest)
    MergeFrom(*source);
  }
}

void InitRequest::MergeFrom(const InitRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.InitRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.customer().size() > 0) {

    customer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.customer_);
  }
  if (from.solution().size() > 0) {

    solution_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.solution_);
  }
  if (from.solutionsize() != 0) {
    set_solutionsize(from.solutionsize());
  }
  if (from.evalnb() != 0) {
    set_evalnb(from.evalnb());
  }
}

void InitRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.InitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitRequest::CopyFrom(const InitRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.InitRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitRequest::IsInitialized() const {
  return true;
}

void InitRequest::Swap(InitRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitRequest::InternalSwap(InitRequest* other) {
  customer_.Swap(&other->customer_);
  solution_.Swap(&other->solution_);
  std::swap(solutionsize_, other->solutionsize_);
  std::swap(evalnb_, other->evalnb_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InitRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InitRequest

// string customer = 1;
void InitRequest::clear_customer() {
  customer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InitRequest::customer() const {
  // @@protoc_insertion_point(field_get:api.InitRequest.customer)
  return customer_.GetNoArena();
}
void InitRequest::set_customer(const ::std::string& value) {
  
  customer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.InitRequest.customer)
}
#if LANG_CXX11
void InitRequest::set_customer(::std::string&& value) {
  
  customer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:api.InitRequest.customer)
}
#endif
void InitRequest::set_customer(const char* value) {
  
  customer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.InitRequest.customer)
}
void InitRequest::set_customer(const char* value, size_t size) {
  
  customer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.InitRequest.customer)
}
::std::string* InitRequest::mutable_customer() {
  
  // @@protoc_insertion_point(field_mutable:api.InitRequest.customer)
  return customer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitRequest::release_customer() {
  // @@protoc_insertion_point(field_release:api.InitRequest.customer)
  
  return customer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitRequest::set_allocated_customer(::std::string* customer) {
  if (customer != NULL) {
    
  } else {
    
  }
  customer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), customer);
  // @@protoc_insertion_point(field_set_allocated:api.InitRequest.customer)
}

// int32 solutionSize = 2;
void InitRequest::clear_solutionsize() {
  solutionsize_ = 0;
}
::google::protobuf::int32 InitRequest::solutionsize() const {
  // @@protoc_insertion_point(field_get:api.InitRequest.solutionSize)
  return solutionsize_;
}
void InitRequest::set_solutionsize(::google::protobuf::int32 value) {
  
  solutionsize_ = value;
  // @@protoc_insertion_point(field_set:api.InitRequest.solutionSize)
}

// int32 evalNb = 3;
void InitRequest::clear_evalnb() {
  evalnb_ = 0;
}
::google::protobuf::int32 InitRequest::evalnb() const {
  // @@protoc_insertion_point(field_get:api.InitRequest.evalNb)
  return evalnb_;
}
void InitRequest::set_evalnb(::google::protobuf::int32 value) {
  
  evalnb_ = value;
  // @@protoc_insertion_point(field_set:api.InitRequest.evalNb)
}

// string solution = 4;
void InitRequest::clear_solution() {
  solution_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InitRequest::solution() const {
  // @@protoc_insertion_point(field_get:api.InitRequest.solution)
  return solution_.GetNoArena();
}
void InitRequest::set_solution(const ::std::string& value) {
  
  solution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.InitRequest.solution)
}
#if LANG_CXX11
void InitRequest::set_solution(::std::string&& value) {
  
  solution_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:api.InitRequest.solution)
}
#endif
void InitRequest::set_solution(const char* value) {
  
  solution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.InitRequest.solution)
}
void InitRequest::set_solution(const char* value, size_t size) {
  
  solution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.InitRequest.solution)
}
::std::string* InitRequest::mutable_solution() {
  
  // @@protoc_insertion_point(field_mutable:api.InitRequest.solution)
  return solution_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitRequest::release_solution() {
  // @@protoc_insertion_point(field_release:api.InitRequest.solution)
  
  return solution_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitRequest::set_allocated_solution(::std::string* solution) {
  if (solution != NULL) {
    
  } else {
    
  }
  solution_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), solution);
  // @@protoc_insertion_point(field_set_allocated:api.InitRequest.solution)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FitnessResponse::kIdFieldNumber;
const int FitnessResponse::kSolutionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FitnessResponse::FitnessResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.FitnessResponse)
}
FitnessResponse::FitnessResponse(const FitnessResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  solution_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.solution().size() > 0) {
    solution_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.solution_);
  }
  // @@protoc_insertion_point(copy_constructor:api.FitnessResponse)
}

void FitnessResponse::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solution_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FitnessResponse::~FitnessResponse() {
  // @@protoc_insertion_point(destructor:api.FitnessResponse)
  SharedDtor();
}

void FitnessResponse::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solution_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FitnessResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FitnessResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[1].descriptor;
}

const FitnessResponse& FitnessResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

FitnessResponse* FitnessResponse::New(::google::protobuf::Arena* arena) const {
  FitnessResponse* n = new FitnessResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FitnessResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.FitnessResponse)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solution_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FitnessResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.FitnessResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.FitnessResponse.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string solution = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_solution()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->solution().data(), this->solution().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.FitnessResponse.solution"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.FitnessResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.FitnessResponse)
  return false;
#undef DO_
}

void FitnessResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.FitnessResponse)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.FitnessResponse.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string solution = 2;
  if (this->solution().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->solution().data(), this->solution().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.FitnessResponse.solution");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->solution(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.FitnessResponse)
}

::google::protobuf::uint8* FitnessResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.FitnessResponse)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.FitnessResponse.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string solution = 2;
  if (this->solution().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->solution().data(), this->solution().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.FitnessResponse.solution");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->solution(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.FitnessResponse)
  return target;
}

size_t FitnessResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.FitnessResponse)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string solution = 2;
  if (this->solution().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->solution());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FitnessResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.FitnessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FitnessResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FitnessResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.FitnessResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.FitnessResponse)
    MergeFrom(*source);
  }
}

void FitnessResponse::MergeFrom(const FitnessResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.FitnessResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.solution().size() > 0) {

    solution_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.solution_);
  }
}

void FitnessResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.FitnessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FitnessResponse::CopyFrom(const FitnessResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.FitnessResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FitnessResponse::IsInitialized() const {
  return true;
}

void FitnessResponse::Swap(FitnessResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FitnessResponse::InternalSwap(FitnessResponse* other) {
  id_.Swap(&other->id_);
  solution_.Swap(&other->solution_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FitnessResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FitnessResponse

// string id = 1;
void FitnessResponse::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FitnessResponse::id() const {
  // @@protoc_insertion_point(field_get:api.FitnessResponse.id)
  return id_.GetNoArena();
}
void FitnessResponse::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.FitnessResponse.id)
}
#if LANG_CXX11
void FitnessResponse::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:api.FitnessResponse.id)
}
#endif
void FitnessResponse::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.FitnessResponse.id)
}
void FitnessResponse::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.FitnessResponse.id)
}
::std::string* FitnessResponse::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.FitnessResponse.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FitnessResponse::release_id() {
  // @@protoc_insertion_point(field_release:api.FitnessResponse.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FitnessResponse::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.FitnessResponse.id)
}

// string solution = 2;
void FitnessResponse::clear_solution() {
  solution_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FitnessResponse::solution() const {
  // @@protoc_insertion_point(field_get:api.FitnessResponse.solution)
  return solution_.GetNoArena();
}
void FitnessResponse::set_solution(const ::std::string& value) {
  
  solution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.FitnessResponse.solution)
}
#if LANG_CXX11
void FitnessResponse::set_solution(::std::string&& value) {
  
  solution_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:api.FitnessResponse.solution)
}
#endif
void FitnessResponse::set_solution(const char* value) {
  
  solution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.FitnessResponse.solution)
}
void FitnessResponse::set_solution(const char* value, size_t size) {
  
  solution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.FitnessResponse.solution)
}
::std::string* FitnessResponse::mutable_solution() {
  
  // @@protoc_insertion_point(field_mutable:api.FitnessResponse.solution)
  return solution_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FitnessResponse::release_solution() {
  // @@protoc_insertion_point(field_release:api.FitnessResponse.solution)
  
  return solution_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FitnessResponse::set_allocated_solution(::std::string* solution) {
  if (solution != NULL) {
    
  } else {
    
  }
  solution_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), solution);
  // @@protoc_insertion_point(field_set_allocated:api.FitnessResponse.solution)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FitnessRequest::kIdFieldNumber;
const int FitnessRequest::kFitnessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FitnessRequest::FitnessRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.FitnessRequest)
}
FitnessRequest::FitnessRequest(const FitnessRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  fitness_ = from.fitness_;
  // @@protoc_insertion_point(copy_constructor:api.FitnessRequest)
}

void FitnessRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fitness_ = 0;
  _cached_size_ = 0;
}

FitnessRequest::~FitnessRequest() {
  // @@protoc_insertion_point(destructor:api.FitnessRequest)
  SharedDtor();
}

void FitnessRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FitnessRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FitnessRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[2].descriptor;
}

const FitnessRequest& FitnessRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

FitnessRequest* FitnessRequest::New(::google::protobuf::Arena* arena) const {
  FitnessRequest* n = new FitnessRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FitnessRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.FitnessRequest)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fitness_ = 0;
}

bool FitnessRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.FitnessRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.FitnessRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double fitness = 2;
      case 2: {
        if (tag == 17u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fitness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.FitnessRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.FitnessRequest)
  return false;
#undef DO_
}

void FitnessRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.FitnessRequest)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.FitnessRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // double fitness = 2;
  if (this->fitness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->fitness(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.FitnessRequest)
}

::google::protobuf::uint8* FitnessRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.FitnessRequest)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.FitnessRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // double fitness = 2;
  if (this->fitness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->fitness(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.FitnessRequest)
  return target;
}

size_t FitnessRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.FitnessRequest)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // double fitness = 2;
  if (this->fitness() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FitnessRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.FitnessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FitnessRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FitnessRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.FitnessRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.FitnessRequest)
    MergeFrom(*source);
  }
}

void FitnessRequest::MergeFrom(const FitnessRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.FitnessRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.fitness() != 0) {
    set_fitness(from.fitness());
  }
}

void FitnessRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.FitnessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FitnessRequest::CopyFrom(const FitnessRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.FitnessRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FitnessRequest::IsInitialized() const {
  return true;
}

void FitnessRequest::Swap(FitnessRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FitnessRequest::InternalSwap(FitnessRequest* other) {
  id_.Swap(&other->id_);
  std::swap(fitness_, other->fitness_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FitnessRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FitnessRequest

// string id = 1;
void FitnessRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FitnessRequest::id() const {
  // @@protoc_insertion_point(field_get:api.FitnessRequest.id)
  return id_.GetNoArena();
}
void FitnessRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.FitnessRequest.id)
}
#if LANG_CXX11
void FitnessRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:api.FitnessRequest.id)
}
#endif
void FitnessRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.FitnessRequest.id)
}
void FitnessRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.FitnessRequest.id)
}
::std::string* FitnessRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.FitnessRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FitnessRequest::release_id() {
  // @@protoc_insertion_point(field_release:api.FitnessRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FitnessRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.FitnessRequest.id)
}

// double fitness = 2;
void FitnessRequest::clear_fitness() {
  fitness_ = 0;
}
double FitnessRequest::fitness() const {
  // @@protoc_insertion_point(field_get:api.FitnessRequest.fitness)
  return fitness_;
}
void FitnessRequest::set_fitness(double value) {
  
  fitness_ = value;
  // @@protoc_insertion_point(field_set:api.FitnessRequest.fitness)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopRequest::kIdFieldNumber;
const int StopRequest::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopRequest::StopRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.StopRequest)
}
StopRequest::StopRequest(const StopRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:api.StopRequest)
}

void StopRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

StopRequest::~StopRequest() {
  // @@protoc_insertion_point(destructor:api.StopRequest)
  SharedDtor();
}

void StopRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StopRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopRequest::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[3].descriptor;
}

const StopRequest& StopRequest::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

StopRequest* StopRequest::New(::google::protobuf::Arena* arena) const {
  StopRequest* n = new StopRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.StopRequest)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool StopRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.StopRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.StopRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.StopRequest.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.StopRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.StopRequest)
  return false;
#undef DO_
}

void StopRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.StopRequest)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StopRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StopRequest.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.StopRequest)
}

::google::protobuf::uint8* StopRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.StopRequest)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StopRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StopRequest.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.StopRequest)
  return target;
}

size_t StopRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.StopRequest)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.StopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StopRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.StopRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.StopRequest)
    MergeFrom(*source);
  }
}

void StopRequest::MergeFrom(const StopRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.StopRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void StopRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.StopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopRequest::CopyFrom(const StopRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.StopRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopRequest::IsInitialized() const {
  return true;
}

void StopRequest::Swap(StopRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopRequest::InternalSwap(StopRequest* other) {
  id_.Swap(&other->id_);
  message_.Swap(&other->message_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StopRequest

// string id = 1;
void StopRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StopRequest::id() const {
  // @@protoc_insertion_point(field_get:api.StopRequest.id)
  return id_.GetNoArena();
}
void StopRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.StopRequest.id)
}
#if LANG_CXX11
void StopRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:api.StopRequest.id)
}
#endif
void StopRequest::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.StopRequest.id)
}
void StopRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.StopRequest.id)
}
::std::string* StopRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.StopRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StopRequest::release_id() {
  // @@protoc_insertion_point(field_release:api.StopRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StopRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.StopRequest.id)
}

// string message = 2;
void StopRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StopRequest::message() const {
  // @@protoc_insertion_point(field_get:api.StopRequest.message)
  return message_.GetNoArena();
}
void StopRequest::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.StopRequest.message)
}
#if LANG_CXX11
void StopRequest::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:api.StopRequest.message)
}
#endif
void StopRequest::set_message(const char* value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.StopRequest.message)
}
void StopRequest::set_message(const char* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.StopRequest.message)
}
::std::string* StopRequest::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:api.StopRequest.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StopRequest::release_message() {
  // @@protoc_insertion_point(field_release:api.StopRequest.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StopRequest::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:api.StopRequest.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StopResponse::kIdFieldNumber;
const int StopResponse::kSolutionFieldNumber;
const int StopResponse::kFitnessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StopResponse::StopResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_api_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.StopResponse)
}
StopResponse::StopResponse(const StopResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  solution_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.solution().size() > 0) {
    solution_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.solution_);
  }
  fitness_ = from.fitness_;
  // @@protoc_insertion_point(copy_constructor:api.StopResponse)
}

void StopResponse::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solution_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fitness_ = 0;
  _cached_size_ = 0;
}

StopResponse::~StopResponse() {
  // @@protoc_insertion_point(destructor:api.StopResponse)
  SharedDtor();
}

void StopResponse::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solution_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void StopResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StopResponse::descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[4].descriptor;
}

const StopResponse& StopResponse::default_instance() {
  protobuf_api_2eproto::InitDefaults();
  return *internal_default_instance();
}

StopResponse* StopResponse::New(::google::protobuf::Arena* arena) const {
  StopResponse* n = new StopResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StopResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.StopResponse)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  solution_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fitness_ = 0;
}

bool StopResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.StopResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.StopResponse.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string solution = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_solution()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->solution().data(), this->solution().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.StopResponse.solution"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double fitness = 3;
      case 3: {
        if (tag == 25u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &fitness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.StopResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.StopResponse)
  return false;
#undef DO_
}

void StopResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.StopResponse)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StopResponse.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string solution = 2;
  if (this->solution().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->solution().data(), this->solution().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StopResponse.solution");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->solution(), output);
  }

  // double fitness = 3;
  if (this->fitness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->fitness(), output);
  }

  // @@protoc_insertion_point(serialize_end:api.StopResponse)
}

::google::protobuf::uint8* StopResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.StopResponse)
  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StopResponse.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string solution = 2;
  if (this->solution().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->solution().data(), this->solution().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StopResponse.solution");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->solution(), target);
  }

  // double fitness = 3;
  if (this->fitness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->fitness(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:api.StopResponse)
  return target;
}

size_t StopResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.StopResponse)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string solution = 2;
  if (this->solution().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->solution());
  }

  // double fitness = 3;
  if (this->fitness() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StopResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.StopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StopResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StopResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.StopResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.StopResponse)
    MergeFrom(*source);
  }
}

void StopResponse::MergeFrom(const StopResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.StopResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.solution().size() > 0) {

    solution_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.solution_);
  }
  if (from.fitness() != 0) {
    set_fitness(from.fitness());
  }
}

void StopResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.StopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StopResponse::CopyFrom(const StopResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.StopResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StopResponse::IsInitialized() const {
  return true;
}

void StopResponse::Swap(StopResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StopResponse::InternalSwap(StopResponse* other) {
  id_.Swap(&other->id_);
  solution_.Swap(&other->solution_);
  std::swap(fitness_, other->fitness_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StopResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StopResponse

// string id = 1;
void StopResponse::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StopResponse::id() const {
  // @@protoc_insertion_point(field_get:api.StopResponse.id)
  return id_.GetNoArena();
}
void StopResponse::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.StopResponse.id)
}
#if LANG_CXX11
void StopResponse::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:api.StopResponse.id)
}
#endif
void StopResponse::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.StopResponse.id)
}
void StopResponse::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.StopResponse.id)
}
::std::string* StopResponse::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:api.StopResponse.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StopResponse::release_id() {
  // @@protoc_insertion_point(field_release:api.StopResponse.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StopResponse::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:api.StopResponse.id)
}

// string solution = 2;
void StopResponse::clear_solution() {
  solution_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& StopResponse::solution() const {
  // @@protoc_insertion_point(field_get:api.StopResponse.solution)
  return solution_.GetNoArena();
}
void StopResponse::set_solution(const ::std::string& value) {
  
  solution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:api.StopResponse.solution)
}
#if LANG_CXX11
void StopResponse::set_solution(::std::string&& value) {
  
  solution_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:api.StopResponse.solution)
}
#endif
void StopResponse::set_solution(const char* value) {
  
  solution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:api.StopResponse.solution)
}
void StopResponse::set_solution(const char* value, size_t size) {
  
  solution_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:api.StopResponse.solution)
}
::std::string* StopResponse::mutable_solution() {
  
  // @@protoc_insertion_point(field_mutable:api.StopResponse.solution)
  return solution_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* StopResponse::release_solution() {
  // @@protoc_insertion_point(field_release:api.StopResponse.solution)
  
  return solution_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void StopResponse::set_allocated_solution(::std::string* solution) {
  if (solution != NULL) {
    
  } else {
    
  }
  solution_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), solution);
  // @@protoc_insertion_point(field_set_allocated:api.StopResponse.solution)
}

// double fitness = 3;
void StopResponse::clear_fitness() {
  fitness_ = 0;
}
double StopResponse::fitness() const {
  // @@protoc_insertion_point(field_get:api.StopResponse.fitness)
  return fitness_;
}
void StopResponse::set_fitness(double value) {
  
  fitness_ = value;
  // @@protoc_insertion_point(field_set:api.StopResponse.fitness)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace api

// @@protoc_insertion_point(global_scope)
